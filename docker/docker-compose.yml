version: '3.8'

networks:
  chat2network:
    driver: bridge

services:
  mysql:
    image: mysql:8.0
    container_name: ${MYSQL_IP}
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_BASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "${MYSQL_PORT}:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - chat2network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.10.2
    container_name: ${ES_BASE_URL}
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false               # 禁用安全认证
      - xpack.security.http.ssl.enabled=false      # 禁用 HTTPS
    ports:
      - "${ES_BASE_PORT}:9200"
      
    volumes:
      - es_data:/usr/share/elasticsearch/data
    networks:
      - chat2network

  etcd:
    container_name: milvus-etcd
    image: quay.io/coreos/etcd:v3.5.5
    environment:
      - ETCD_AUTO_COMPACTION_MODE=revision
      - ETCD_AUTO_COMPACTION_RETENTION=1000
      - ETCD_QUOTA_BACKEND_BYTES=4294967296
      - ETCD_SNAPSHOT_COUNT=50000
    volumes:
      - etcd:/etcd
    command: etcd -advertise-client-urls=http://127.0.0.1:2379 -listen-client-urls http://0.0.0.0:2379 --data-dir /etcd
    healthcheck:
      test: ["CMD", "etcdctl", "endpoint", "health"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - chat2network
  minio:
    container_name: milvus-minio
    image: minio/minio:RELEASE.2023-03-20T20-16-18Z
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    ports:
      - "9001:9001"
      - "9000:9000"
    volumes:
      - minio_data:/minio_data
    command: minio server /minio_data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
          - chat2network
  standalone:
    container_name: ${MILVUS_HOST}
    image: milvusdb/milvus:v2.4.13-hotfix
    command: ["milvus", "run", "standalone"]
    security_opt:
      - seccomp:unconfined
    environment:
      ETCD_ENDPOINTS: etcd:2379
      MINIO_ADDRESS: minio:9000
    volumes:
      - milvus_data:/var/lib/milvus
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9091/healthz"]
      interval: 30s
      start_period: 90s
      timeout: 20s
      retries: 3
    ports:
      - "19530:19530"
      - "9091:9091"
    depends_on:
      - etcd
      - minio
    networks:
      - chat2network


  chat2anything:
    image: chat2anything  # 替换为实际的chat2anything镜像名
    container_name: chat2anything_app
    env_file:
      - .env
    depends_on:
      - mysql
      - elasticsearch
      - standalone
    ports:
      - "9988:9988"  # 替换为chat2anything API的端口
    networks:
      - chat2network

  chat2anything_web:
    image: chat2anything_web  # 替换为实际的chat2anything_web镜像名
    container_name: chat2anything_web
    depends_on:
      - chat2anything
    ports:
      - "8080:80"  # Nginx 默认监听80端口
    networks:
      - chat2network

volumes:
  mysql_data:
    driver: local
    driver_opts:
      o: bind
      type: none
      # device: /path/to/mysql_data  # Replace with the desired path on your host machine

  es_data:
    driver: local
    driver_opts:
      o: bind
      type: none
      # device: /path/to/es_data  # Replace with the desired path on your host machine

  minio_data:
    driver: local
    driver_opts:
      o: bind
      type: none
      # device: /path/to/minio_data  # Replace with the desired path on your host machine

  milvus_data:
    driver: local
    driver_opts:
      o: bind
      type: none
      # device: /path/to/milvus_data  # Replace with the desired path on your host machine

  etcd:
    driver: local
    driver_opts:
      o: bind
      type: none
      # device: /path/to/etcd  # Replace with the desired path on your host machine

